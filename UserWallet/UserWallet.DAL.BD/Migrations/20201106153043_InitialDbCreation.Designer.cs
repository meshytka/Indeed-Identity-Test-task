// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using UserWallet.DAL.BD;

namespace UserWallet.DAL.BD.Migrations
{
    [DbContext(typeof(EntityDaoContext))]
    [Migration("20201106153043_InitialDbCreation")]
    partial class InitialDbCreation
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("UserWallet.Entities.CurrencyAccount", b =>
                {
                    b.Property<Guid>("CurrencyAccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("CurrencyType")
                        .HasColumnType("integer");

                    b.Property<decimal>("Value")
                        .HasColumnType("numeric");

                    b.Property<Guid>("WalletId")
                        .HasColumnType("uuid");

                    b.HasKey("CurrencyAccountId");

                    b.HasIndex("WalletId");

                    b.ToTable("CurrencyAccount");
                });

            modelBuilder.Entity("UserWallet.Entities.Wallet", b =>
                {
                    b.Property<Guid>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.HasKey("ClientId");

                    b.ToTable("Wallets");
                });

            modelBuilder.Entity("UserWallet.Entities.CurrencyAccount", b =>
                {
                    b.HasOne("UserWallet.Entities.Wallet", "Wallet")
                        .WithMany("CurrencyAccounts")
                        .HasForeignKey("WalletId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
